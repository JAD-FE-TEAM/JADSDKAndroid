/**
 * SDK中各组件要使用的基础构建配置
 */
apply from: "$project.rootDir/sdk-variable-config.gradle"

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 16
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 28
        versionCode rootProject.ext.sdkVersionCode
        versionName rootProject.ext.sdkVersionName
    }

    buildTypes {
        debug {
            buildConfigField("int", "VERSION_CODE", "${rootProject.ext.sdkVersionCode}")
            buildConfigField("String", "VERSION_NAME", "\"${rootProject.ext.sdkVersionName}\"")

            debuggable true
        }
        release {
            buildConfigField("int", "VERSION_CODE", "${rootProject.ext.sdkVersionCode}")
            buildConfigField("String", "VERSION_NAME", "\"${rootProject.ext.sdkVersionName}\"")

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "channel"

    productFlavors {
        jingdong {
            dimension "channel"
        }
        xiaomi {
            dimension "channel"
        }
    }

    libraryVariants.all { variant ->
        if (variant.buildType.name == "release") {
            // 修改aar名称
            variant.outputs.all { output ->
                outputFileName = ((project.name == "demo") ? rootProject.name : project.name) + "_" +
                        variant.flavorName + "_" +
                        android.defaultConfig.versionName + "_" +
                        android.defaultConfig.versionCode + "_" +
                        releaseTime() +
                        ((project.name == "demo") ? ".apk" : ".aar")
            }
            // 复制aar到指定目录
            variant.assembleProvider.configure {
                it.doLast {
                    variant.outputs.all { output ->
                        // 打包时输出2份aar, 1份放在demo-libs下
                        def targetPath = [project.rootDir.absolutePath, "demo", "libs"].join(File.separator)
                        copy {
                            from output.outputFile
                            into targetPath
                        }
                        println("AAR已移动到：${targetPath}")

                        // 另1份放在自己模块的libs下
                        def targetPath2 = [project.rootDir.absolutePath, project.name, "libs"].join(File.separator)
                        copy {
                            from output.outputFile
                            into targetPath2
                        }
                        println("AAR已移动到2：${targetPath2}")
                    }
                }
            }
        }
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("GMT+08:00"))
}




//afterEvaluate {
//    publishing {
//        publications {
//            release(MavenPublication) {
////                from components.java
//
//                groupId = 'com.github.jingdong'
//                artifactId = project.name
//                version = rootProject.ext.sdkVersionName
////                artifact(sourcesJar)
//            }
//        }
//    }
//}

//afterEvaluate {
//    publishing {
//        publications {
//            jingdongRelease(MavenPublication) {
//                from components.jingdongRelease
//
//                groupId = 'com.github.my'
//                artifactId = 'nice-project'
//                version = rootProject.ext.sdkVersionCode
//                artifact(sourcesJar)
//                artifact("$buildDir/outputs/aar/nice-project-production-release.aar") {
//                    classifier 'production'
//                    extension 'aar'
//                }
//            }
//
////            productionRelease(MavenPublication) {
////                from components.productionRelease
////
////                groupId = 'com.github.my'
////                artifactId = 'nice-project'
////                version = Config.libraryVersion
////                artifact(sourcesJar)
////                artifact("$buildDir/outputs/aar/nice-project-production-release.aar") {
////                    classifier 'production'
////                    extension 'aar'
////                }
////            }
//
////            devDebug(MavenPublication){
////                from components.devDebug
////
////                groupId = 'com.github.my'
////                artifactId = 'nice-project'
////                version = Config.libraryVersion
////                artifact(sourcesJar)
////                artifact("$buildDir/outputs/aar/nice=project-dev-release.aar") {
////                    classifier 'dev'
////                    extension 'aar'
////                }
////            }
//        }
//    }
//}

dependencies {
    //noinspection GradleDependency
    implementation 'androidx.appcompat:appcompat:1.0.0'
    //noinspection GradleDependency
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    //noinspection GradleDependency
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
}